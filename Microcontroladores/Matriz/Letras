#include "p16F887.inc"   ; TODO INSERT CONFIG CODE HERE USING CONFIG BITS GENERATOR
 	__CONFIG	_CONFIG1,	_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOR_OFF & _IESO_ON & _FCMEN_ON & _LVP_OFF 
 	__CONFIG	_CONFIG2,	_BOR40V & _WRT_OFF

RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

MAIN_PROG CODE                      ; let linker place main program
i equ 0x30
j equ 0x31
k equ 0x32
aux equ 0x33
x equ 0x34
y equ 0x35
z equ 0x36
l equ 0x37
START

    BANKSEL PORTA ;
    CLRF PORTA ;Init PORTA
    BANKSEL ANSEL ;
    CLRF ANSEL ;digital I/O
    CLRF ANSELH
    BANKSEL TRISA ;
    CLRF TRISA
    CLRF TRISB
    CLRF TRISC
    CLRF TRISD
    CLRF TRISE
    BCF STATUS,RP1
    BCF STATUS,RP0
    CLRF PORTA
    CLRF PORTB
    CLRF PORTC
    CLRF PORTD
    CLRF PORTE
    
    Inicio
    call delay1
    CLRF PORTD
    CLRF PORTB
    call delay
    call delay2
    CLRF PORTD
    CLRF PORTB 
    call delay
    call delay3
    CLRF PORTD
    CLRF PORTB
    call delay


    goto Inicio
 
      
    FuncW
    call c1w
    call demora
    call c2w
    call demora
    call c3w
    call demora
    call c4w
    call demora
    call c5w
    call demora 
    call c6w
    call demora
    call c7w
    call demora
    Return
    c1w
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    c2w
    MOVLW   b'01000000'                          
    MOVWF   PORTD  
    MOVLW   b'10000000'                          
    MOVWF   PORTB  
    return
    c3w
    MOVLW   b'00100000'                          
    MOVWF   PORTD  
    MOVLW   b'11111101'                          
    MOVWF   PORTB  
    return
    c4w
    MOVLW   b'00010000'                          
    MOVWF   PORTD  
    MOVLW   b'11111011'                          
    MOVWF   PORTB 
    return
    c5w
    MOVLW   b'00001000'                          
    MOVWF   PORTD  
    MOVLW   b'11111011'                         
    MOVWF   PORTB 
    return
    c6w
    MOVLW   b'00000100'                          
    MOVWF   PORTD  
    MOVLW   b'11111101'                           
    MOVWF   PORTB 
    return
    c7w
    MOVLW   b'00000010'                          
    MOVWF   PORTD  
    MOVLW   b'10000000'                           
    MOVWF   PORTB 
    return

    FuncM
    call c1m
    call demora
    call c2m
    call demora
    call c3m
    call demora
    call c4m
    call demora
    call c5m
    call demora 
    call c6m
    call demora
    call c7m
    call demora
    return
    c1m
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    c2m
    MOVLW   b'01000000'                          
    MOVWF   PORTD  
    MOVLW   b'10000000'                          
    MOVWF   PORTB  
    return
    c3m
    MOVLW   b'00100000'                          
    MOVWF   PORTD  
    MOVLW   b'10111111'                          
    MOVWF   PORTB  
    return
    c4m
    MOVLW   b'00010000'                          
    MOVWF   PORTD  
    MOVLW   b'11011111'                          
    MOVWF   PORTB 
    return
    c5m
    MOVLW   b'00001000'                          
    MOVWF   PORTD  
    MOVLW   b'11011111'                          
    MOVWF   PORTB 
    return
    c6m
    MOVLW   b'00000100'                          
    MOVWF   PORTD  
    MOVLW   b'10111111'                          
    MOVWF   PORTB 
    return
    c7m
    MOVLW   b'00000010'                          
    MOVWF   PORTD  
    MOVLW   b'10000000'                          
    MOVWF   PORTB 
    return

    
    FuncR
    call c1r
    call demora
    call c2r
    call demora
    call c3r
    call demora
    call c4r
    call demora
    call c5r
    call demora 
    call c6r
    call demora
    call c7r
    call demora
    return
    c1r
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    limpiar
    CLRF PORTD                
    CLRF PORTB
    return
    c2r
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    c3r
    MOVLW   b'00100000'                          
    MOVWF   PORTD  
    MOVLW   b'10000000'                          
    MOVWF   PORTB  
    return
    c4r
    MOVLW   b'00010000'                          
    MOVWF   PORTD  
    MOVLW   b'10110111'                          
    MOVWF   PORTB 
    return
    c5r
    MOVLW   b'00001000'                          
    MOVWF   PORTD  
    MOVLW   b'10110111'                          
    MOVWF   PORTB 
    return
    c6r
    MOVLW   b'00000100'                          
    MOVWF   PORTD  
    MOVLW   b'11001000'                          
    MOVWF   PORTB 
    return
    c7r
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB 
    return    
    
    demora
    MOVLW d'5'
    MOVWF i
loopj:    MOVLW d'5'
    MOVWF j
loopk:    MOVLW d'5'
    nop
    MOVWF k
    DECFSZ k
    GOTO $-1
    DECFSZ j
    GOTO loopk
    DECFSZ i
    GOTO loopj
    RETURN
    
    
delay:
    MOVLW d'30' 
    MOVWF x
loopy:    
    MOVLW d'54'
    MOVWF y
loopz:    
    MOVLW d'50'
    MOVWF z 
    DECFSZ z
    GOTO $-1
    DECFSZ y
    GOTO loopz
    DECFSZ x
    GOTO loopy
    return
    
delay1:
    MOVLW d'10' 
    MOVWF x
loop1:    
    MOVLW d'10'
    MOVWF y
loop2:    
    MOVLW d'0'
    MOVWF z 
    DECFSZ z 
    GOTO $-1
    call FuncW
    DECFSZ y
    GOTO loop2
    DECFSZ x
    GOTO loop1
    return   
    
    delay2:
    MOVLW d'10' 
    MOVWF x
loop3:    
    MOVLW d'10'
    MOVWF y
loop4:    
    MOVLW d'0'
    MOVWF z 
    DECFSZ z 
    GOTO $-1
    call FuncM
    DECFSZ y
    GOTO loop4
    DECFSZ x
    GOTO loop3
    return   
    
delay3:
    MOVLW d'10' 
    MOVWF x
loop5:    
    MOVLW d'10'
    MOVWF y
loop6:    
    MOVLW d'0'
    MOVWF z 
    DECFSZ z 
    GOTO $-1
    call FuncR
    DECFSZ y
    GOTO loop6
    DECFSZ x
    GOTO loop5
    return   
    
    
END
